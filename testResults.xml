<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="129" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2024-03-05" time="22:50:19">
  <environment nunit-version="2.5.8.0" user-domain="GOGVPC" os-version="10.0.22631" cwd="C:\Users\gogbg\Documents\git\gogbg\psplaceholders" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" clr-version="Unknown" user="gogbg" machine-name="GOGVPC" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="6.0833" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\gogbg\Documents\git\gogbg\psplaceholders\.tests\Get-PSPlaceholder.tests.ps1" executed="True" result="Success" success="True" time="1.9103" asserts="0" description="C:\Users\gogbg\Documents\git\gogbg\psplaceholders\.tests\Get-PSPlaceholder.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="-Path" executed="True" result="Success" success="True" time="0.6747" asserts="0" description="-Path">
            <results>
              <test-suite type="TestFixture" name="-Path.is single file without placeholders" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="-Path.is single file without placeholders">
                <results>
                  <test-case description="Should not throw" name="-Path.is single file without placeholders.Should not throw" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not return result" name="-Path.is single file without placeholders.Should not return result" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is single file with 1 placeholder in content" executed="True" result="Success" success="True" time="0.1461" asserts="0" description="-Path.is single file with 1 placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path.is single file with 1 placeholder in content.Should not throw" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return one result" name="-Path.is single file with 1 placeholder in content.Should return one result" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path.is single file with 1 placeholder in content.Should return result of type [Placeholder]" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholder:placeholder_firstName" name="-Path.is single file with 1 placeholder in content.Should find the placeholder:placeholder_firstName" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is single file with 2 placeholder in content" executed="True" result="Success" success="True" time="0.2838" asserts="0" description="-Path.is single file with 2 placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path.is single file with 2 placeholder in content.Should not throw" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return two result" name="-Path.is single file with 2 placeholder in content.Should return two result" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path.is single file with 2 placeholder in content.Should return result of type [Placeholder]" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholders:placeholder_firstName,placeholder_lastName" name="-Path.is single file with 2 placeholder in content.Should find the placeholders:placeholder_firstName,placeholder_lastName" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is folder with 2 unqiue placeholder in content" executed="True" result="Success" success="True" time="0.5379" asserts="0" description="-Path.is folder with 2 unqiue placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path.is folder with 2 unqiue placeholder in content.Should not throw" time="0.0625" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return one result" name="-Path.is folder with 2 unqiue placeholder in content.Should return one result" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path.is folder with 2 unqiue placeholder in content.Should return result of type [Placeholder]" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the unique placeholders:placeholder_firstName,placeholder_lastName" name="-Path.is folder with 2 unqiue placeholder in content.Should find the unique placeholders:placeholder_firstName,placeholder_lastName" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should count repeating placeholders:placeholder_firstName" name="-Path.is folder with 2 unqiue placeholder in content.Should count repeating placeholders:placeholder_firstName" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is single file with 1 placeholder in name" executed="True" result="Success" success="True" time="0.6647" asserts="0" description="-Path.is single file with 1 placeholder in name">
                <results>
                  <test-case description="Should not throw" name="-Path.is single file with 1 placeholder in name.Should not throw" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return one result" name="-Path.is single file with 1 placeholder in name.Should return one result" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path.is single file with 1 placeholder in name.Should return result of type [Placeholder]" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholder:placeholder_person" name="-Path.is single file with 1 placeholder in name.Should find the placeholder:placeholder_person" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-String" executed="True" result="Success" success="True" time="0.9111" asserts="0" description="-String">
            <results>
              <test-suite type="TestFixture" name="-String.contains no placeholders" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="-String.contains no placeholders">
                <results>
                  <test-case description="Should not throw" name="-String.contains no placeholders.Should not throw" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not return result" name="-String.contains no placeholders.Should not return result" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String.contains 1 placeholder" executed="True" result="Success" success="True" time="0.1226" asserts="0" description="-String.contains 1 placeholder">
                <results>
                  <test-case description="Should not throw" name="-String.contains 1 placeholder.Should not throw" time="0.0211" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return one result" name="-String.contains 1 placeholder.Should return one result" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-String.contains 1 placeholder.Should return result of type [Placeholder]" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholder:placeholder_firstName" name="-String.contains 1 placeholder.Should find the placeholder:placeholder_firstName" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String.contains 2 placeholders" executed="True" result="Success" success="True" time="0.2261" asserts="0" description="-String.contains 2 placeholders">
                <results>
                  <test-case description="Should return two result" name="-String.contains 2 placeholders.Should return two result" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-String.contains 2 placeholders.Should return result of type [Placeholder]" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholders:placeholder_firstName,placeholder_lastName" name="-String.contains 2 placeholders.Should find the placeholders:placeholder_firstName,placeholder_lastName" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-Path -FileStatistics" executed="True" result="Success" success="True" time="1.8411" asserts="0" description="-Path -FileStatistics">
            <results>
              <test-suite type="TestFixture" name="-Path -FileStatistics.is single file without placeholders" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="-Path -FileStatistics.is single file without placeholders">
                <results>
                  <test-case description="Should not throw" name="-Path -FileStatistics.is single file without placeholders.Should not throw" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not return result" name="-Path -FileStatistics.is single file without placeholders.Should not return result" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be null" name="-Path -FileStatistics.is single file without placeholders.refStats should be null" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -FileStatistics.is single file with 1 placeholder in content" executed="True" result="Success" success="True" time="0.1827" asserts="0" description="-Path -FileStatistics.is single file with 1 placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path -FileStatistics.is single file with 1 placeholder in content.Should not throw" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return one result" name="-Path -FileStatistics.is single file with 1 placeholder in content.Should return one result" time="0.0214" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path -FileStatistics.is single file with 1 placeholder in content.Should return result of type [Placeholder]" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholder:placeholder_firstName" name="-Path -FileStatistics.is single file with 1 placeholder in content.Should find the placeholder:placeholder_firstName" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be 1 object" name="-Path -FileStatistics.is single file with 1 placeholder in content.refStats should be 1 object" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be of type [FileWithPlaceholders]" name="-Path -FileStatistics.is single file with 1 placeholder in content.refStats should be of type [FileWithPlaceholders]" time="0.0167" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should have .PlaceholderInContent={{placeholder_firstName}}" name="-Path -FileStatistics.is single file with 1 placeholder in content.refStats should have .PlaceholderInContent={{placeholder_firstName}}" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -FileStatistics.is single file with 2 placeholder in content" executed="True" result="Success" success="True" time="0.3677" asserts="0" description="-Path -FileStatistics.is single file with 2 placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path -FileStatistics.is single file with 2 placeholder in content.Should not throw" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return 2 results" name="-Path -FileStatistics.is single file with 2 placeholder in content.Should return 2 results" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path -FileStatistics.is single file with 2 placeholder in content.Should return result of type [Placeholder]" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholders:placeholder_firstName,placeholder_lastName" name="-Path -FileStatistics.is single file with 2 placeholder in content.Should find the placeholders:placeholder_firstName,placeholder_lastName" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be 1 objects" name="-Path -FileStatistics.is single file with 2 placeholder in content.refStats should be 1 objects" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be of type [FileWithPlaceholders]" name="-Path -FileStatistics.is single file with 2 placeholder in content.refStats should be of type [FileWithPlaceholders]" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should have .PlaceholderInContent={{placeholder_firstName}},{{placeholder_lastName}}" name="-Path -FileStatistics.is single file with 2 placeholder in content.refStats should have .PlaceholderInContent={{placeholder_firstName}},{{placeholder_lastName}}" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content" executed="True" result="Success" success="True" time="0.7701" asserts="0" description="-Path -FileStatistics.is folder with 2 unqiue placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.Should not throw" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return 2 results" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.Should return 2 results" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.Should return result of type [Placeholder]" time="0.0662" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the unique placeholders:placeholder_firstName,placeholder_lastName" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.Should find the unique placeholders:placeholder_firstName,placeholder_lastName" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should count repeating placeholders:placeholder_firstName" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.Should count repeating placeholders:placeholder_firstName" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be 2 objects" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.refStats should be 2 objects" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be of type [FileWithPlaceholders]" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.refStats should be of type [FileWithPlaceholders]" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should have .Name=fileWithSinglePlaceholder.json and .PlaceholderInContent={{placeholder_firstName}}" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.refStats should have .Name=fileWithSinglePlaceholder.json and .PlaceholderInContent={{placeholder_firstName}}" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should have .Name=fileWithTwoPlaceholder.json and .PlaceholderInContent={{placeholder_firstName}},{{placeholder_lastName}}" name="-Path -FileStatistics.is folder with 2 unqiue placeholder in content.refStats should have .Name=fileWithTwoPlaceholder.json and .PlaceholderInContent={{placeholder_firstName}},{{placeholder_lastName}}" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -FileStatistics.is single file with 1 placeholder in name" executed="True" result="Success" success="True" time="0.9215" asserts="0" description="-Path -FileStatistics.is single file with 1 placeholder in name">
                <results>
                  <test-case description="Should not throw" name="-Path -FileStatistics.is single file with 1 placeholder in name.Should not throw" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return one object" name="-Path -FileStatistics.is single file with 1 placeholder in name.Should return one object" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return result of type [Placeholder]" name="-Path -FileStatistics.is single file with 1 placeholder in name.Should return result of type [Placeholder]" time="0.0215" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should find the placeholder:placeholder_person" name="-Path -FileStatistics.is single file with 1 placeholder in name.Should find the placeholder:placeholder_person" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be 1 object" name="-Path -FileStatistics.is single file with 1 placeholder in name.refStats should be 1 object" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should be of type [FileWithPlaceholders]" name="-Path -FileStatistics.is single file with 1 placeholder in name.refStats should be of type [FileWithPlaceholders]" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="refStats should have .PlaceholderInName={{placeholder_person}}" name="-Path -FileStatistics.is single file with 1 placeholder in name.refStats should have .PlaceholderInName={{placeholder_person}}" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\gogbg\Documents\git\gogbg\psplaceholders\.tests\Update-PSPlaceholder.tests.ps1" executed="True" result="Success" success="True" time="4.173" asserts="0" description="C:\Users\gogbg\Documents\git\gogbg\psplaceholders\.tests\Update-PSPlaceholder.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="-String" executed="True" result="Success" success="True" time="0.339" asserts="0" description="-String">
            <results>
              <test-suite type="TestFixture" name="-String.contains no placeholders" executed="True" result="Success" success="True" time="0.1638" asserts="0" description="-String.contains no placeholders">
                <results>
                  <test-case description="Should not throw" name="-String.contains no placeholders.Should not throw" time="0.0744" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String.contains no placeholders.Should return the same string" time="0.0758" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String.contains 1 placeholder" executed="True" result="Success" success="True" time="0.2339" asserts="0" description="-String.contains 1 placeholder">
                <results>
                  <test-case description="Should throw" name="-String.contains 1 placeholder.Should throw" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String.contains 2 placeholder" executed="True" result="Success" success="True" time="0.3039" asserts="0" description="-String.contains 2 placeholder">
                <results>
                  <test-case description="Should throw" name="-String.contains 2 placeholder.Should throw" time="0.0541" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-String -AllowEmptyPlaceholders" executed="True" result="Success" success="True" time="0.7065" asserts="0" description="-String -AllowEmptyPlaceholders">
            <results>
              <test-suite type="TestFixture" name="-String -AllowEmptyPlaceholders.contains no placeholders" executed="True" result="Success" success="True" time="0.1028" asserts="0" description="-String -AllowEmptyPlaceholders.contains no placeholders">
                <results>
                  <test-case description="Should not throw" name="-String -AllowEmptyPlaceholders.contains no placeholders.Should not throw" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -AllowEmptyPlaceholders.contains no placeholders.Should return the same string" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -AllowEmptyPlaceholders.contains 1 placeholder" executed="True" result="Success" success="True" time="0.2294" asserts="0" description="-String -AllowEmptyPlaceholders.contains 1 placeholder">
                <results>
                  <test-case description="Should not throw" name="-String -AllowEmptyPlaceholders.contains 1 placeholder.Should not throw" time="0.0578" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -AllowEmptyPlaceholders.contains 1 placeholder.Should return the same string" time="0.0521" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -AllowEmptyPlaceholders.contains 2 placeholder" executed="True" result="Success" success="True" time="0.3534" asserts="0" description="-String -AllowEmptyPlaceholders.contains 2 placeholder">
                <results>
                  <test-case description="Should not throw" name="-String -AllowEmptyPlaceholders.contains 2 placeholder.Should not throw" time="0.0564" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -AllowEmptyPlaceholders.contains 2 placeholder.Should return the same string" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-String -Values" executed="True" result="Success" success="True" time="1.4037" asserts="0" description="-String -Values">
            <results>
              <test-suite type="TestFixture" name="-String -Values.contains no placeholders and values in empty" executed="True" result="Success" success="True" time="0.0915" asserts="0" description="-String -Values.contains no placeholders and values in empty">
                <results>
                  <test-case description="Should not throw" name="-String -Values.contains no placeholders and values in empty.Should not throw" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -Values.contains no placeholders and values in empty.Should return the same string" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values.contains no placeholders and -values is not empty" executed="True" result="Success" success="True" time="0.2399" asserts="0" description="-String -Values.contains no placeholders and -values is not empty">
                <results>
                  <test-case description="Should not throw" name="-String -Values.contains no placeholders and -values is not empty.Should not throw" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -Values.contains no placeholders and -values is not empty.Should return the same string" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return warning about unused placeholder value" name="-String -Values.contains no placeholders and -values is not empty.Should return warning about unused placeholder value" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values.contains 1 placeholder and -Values contains value for it" executed="True" result="Success" success="True" time="0.3881" asserts="0" description="-String -Values.contains 1 placeholder and -Values contains value for it">
                <results>
                  <test-case description="Should not throw" name="-String -Values.contains 1 placeholder and -Values contains value for it.Should not throw" time="0.0898" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-String -Values.contains 1 placeholder and -Values contains value for it.Should return modified string" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values.contains 1 placeholder and -Values does not contains value for it" executed="True" result="Success" success="True" time="0.4766" asserts="0" description="-String -Values.contains 1 placeholder and -Values does not contains value for it">
                <results>
                  <test-case description="Should throw" name="-String -Values.contains 1 placeholder and -Values does not contains value for it.Should throw" time="0.0703" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values.contains 2 placeholder and -Values contains value for them" executed="True" result="Success" success="True" time="0.6863" asserts="0" description="-String -Values.contains 2 placeholder and -Values contains value for them">
                <results>
                  <test-case description="Should not throw" name="-String -Values.contains 2 placeholder and -Values contains value for them.Should not throw" time="0.0684" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-String -Values.contains 2 placeholder and -Values contains value for them.Should return modified string" time="0.0616" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not return warning" name="-String -Values.contains 2 placeholder and -Values contains value for them.Should not return warning" time="0.0635" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-String -Values -AllowEmptyPlaceholders" executed="True" result="Success" success="True" time="2.0132" asserts="0" description="-String -Values -AllowEmptyPlaceholders">
            <results>
              <test-suite type="TestFixture" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty" executed="True" result="Success" success="True" time="0.0953" asserts="0" description="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty">
                <results>
                  <test-case description="Should not throw" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty.Should not throw" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty.Should return the same string" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty" executed="True" result="Success" success="True" time="0.2151" asserts="0" description="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty">
                <results>
                  <test-case description="Should not throw" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty.Should not throw" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty.Should return the same string" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return warning about unused placeholder value" name="-String -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty.Should return warning about unused placeholder value" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it" executed="True" result="Success" success="True" time="0.3207" asserts="0" description="-String -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it">
                <results>
                  <test-case description="Should not throw" name="-String -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it.Should not throw" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-String -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it.Should return modified string" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them" executed="True" result="Success" success="True" time="0.4682" asserts="0" description="-String -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them">
                <results>
                  <test-case description="Should not throw" name="-String -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them.Should not throw" time="0.0618" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-String -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them.Should return modified string" time="0.0689" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-String -Values -AllowEmptyPlaceholders.contains 1 executable placeholder and -Values contains value for it" executed="True" result="Success" success="True" time="0.5981" asserts="0" description="-String -Values -AllowEmptyPlaceholders.contains 1 executable placeholder and -Values contains value for it">
                <results>
                  <test-case description="Should not throw" name="-String -Values -AllowEmptyPlaceholders.contains 1 executable placeholder and -Values contains value for it.Should not throw" time="0.0786" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-String -Values -AllowEmptyPlaceholders.contains 1 executable placeholder and -Values contains value for it.Should return modified string" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-Path" executed="True" result="Success" success="True" time="2.476" asserts="0" description="-Path">
            <results>
              <test-suite type="TestFixture" name="-Path.is single file without placeholders" executed="True" result="Success" success="True" time="0.0938" asserts="0" description="-Path.is single file without placeholders">
                <results>
                  <test-case description="Should not throw" name="-Path.is single file without placeholders.Should not throw" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path.is single file without placeholders.Should not update the file content" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is single file with 1 placeholder in content" executed="True" result="Success" success="True" time="0.2253" asserts="0" description="-Path.is single file with 1 placeholder in content">
                <results>
                  <test-case description="Should throw" name="-Path.is single file with 1 placeholder in content.Should throw" time="0.0556" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path.is single file with 1 placeholder in content.Should not update the file content" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is single file with 2 placeholder in content" executed="True" result="Success" success="True" time="0.3226" asserts="0" description="-Path.is single file with 2 placeholder in content">
                <results>
                  <test-case description="Should throw" name="-Path.is single file with 2 placeholder in content.Should throw" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path.is single file with 2 placeholder in content.Should not update the file content" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path.is single file with 1 placeholder in name" executed="True" result="Success" success="True" time="0.4508" asserts="0" description="-Path.is single file with 1 placeholder in name">
                <results>
                  <test-case description="Should throw" name="-Path.is single file with 1 placeholder in name.Should throw" time="0.0548" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file name" name="-Path.is single file with 1 placeholder in name.Should not update the file name" time="0.0571" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-Path -AllowEmptyPlaceholders" executed="True" result="Success" success="True" time="2.9486" asserts="0" description="-Path -AllowEmptyPlaceholders">
            <results>
              <test-suite type="TestFixture" name="-Path -AllowEmptyPlaceholders.is single file without placeholders" executed="True" result="Success" success="True" time="0.1063" asserts="0" description="-Path -AllowEmptyPlaceholders.is single file without placeholders">
                <results>
                  <test-case description="Should not throw" name="-Path -AllowEmptyPlaceholders.is single file without placeholders.Should not throw" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path -AllowEmptyPlaceholders.is single file without placeholders.Should not update the file content" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in content" executed="True" result="Success" success="True" time="0.2185" asserts="0" description="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in content.Should not throw" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in content.Should not update the file content" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -AllowEmptyPlaceholders.is single file with 2 placeholder in content" executed="True" result="Success" success="True" time="0.3579" asserts="0" description="-Path -AllowEmptyPlaceholders.is single file with 2 placeholder in content">
                <results>
                  <test-case description="Should not throw" name="-Path -AllowEmptyPlaceholders.is single file with 2 placeholder in content.Should not throw" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path -AllowEmptyPlaceholders.is single file with 2 placeholder in content.Should not update the file content" time="0.0791" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in name" executed="True" result="Success" success="True" time="0.4603" asserts="0" description="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in name">
                <results>
                  <test-case description="Should not throw" name="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in name.Should not throw" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file name" name="-Path -AllowEmptyPlaceholders.is single file with 1 placeholder in name.Should not update the file name" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-Path -Values" executed="True" result="Success" success="True" time="3.4771" asserts="0" description="-Path -Values">
            <results>
              <test-suite type="TestFixture" name="-Path -Values.is single file without placeholders and -values is empty" executed="True" result="Success" success="True" time="0.0894" asserts="0" description="-Path -Values.is single file without placeholders and -values is empty">
                <results>
                  <test-case description="Should not throw" name="-Path -Values.is single file without placeholders and -values is empty.Should not throw" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path -Values.is single file without placeholders and -values is empty.Should not update the file content" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values.is single file without placeholders and -values is not empty" executed="True" result="Success" success="True" time="0.2088" asserts="0" description="-Path -Values.is single file without placeholders and -values is not empty">
                <results>
                  <test-case description="Should not throw" name="-Path -Values.is single file without placeholders and -values is not empty.Should not throw" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not update the file content" name="-Path -Values.is single file without placeholders and -values is not empty.Should not update the file content" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return warning about unused placeholder value" name="-Path -Values.is single file without placeholders and -values is not empty.Should return warning about unused placeholder value" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values.is single file with 1 placeholder and -Values contains value for it" executed="True" result="Success" success="True" time="0.3076" asserts="0" description="-Path -Values.is single file with 1 placeholder and -Values contains value for it">
                <results>
                  <test-case description="Should not throw" name="-Path -Values.is single file with 1 placeholder and -Values contains value for it.Should not throw" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should update the file content" name="-Path -Values.is single file with 1 placeholder and -Values contains value for it.Should update the file content" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values.is single file with 1 placeholder and -Values does not contains value for it" executed="True" result="Success" success="True" time="0.3614" asserts="0" description="-Path -Values.is single file with 1 placeholder and -Values does not contains value for it">
                <results>
                  <test-case description="Should throw" name="-Path -Values.is single file with 1 placeholder and -Values does not contains value for it.Should throw" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values.is single file with 2 placeholders and -Values contains value for them" executed="True" result="Success" success="True" time="0.517" asserts="0" description="-Path -Values.is single file with 2 placeholders and -Values contains value for them">
                <results>
                  <test-case description="Should not throw" name="-Path -Values.is single file with 2 placeholders and -Values contains value for them.Should not throw" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-Path -Values.is single file with 2 placeholders and -Values contains value for them.Should return modified string" time="0.0508" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not return warning" name="-Path -Values.is single file with 2 placeholders and -Values contains value for them.Should not return warning" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="-Path -Values -AllowEmptyPlaceholders" executed="True" result="Success" success="True" time="3.6611" asserts="0" description="-Path -Values -AllowEmptyPlaceholders">
            <results>
              <test-suite type="TestFixture" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty" executed="True" result="Success" success="True" time="0.025" asserts="0" description="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty">
                <results>
                  <test-case description="Should not throw" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty.Should not throw" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is empty.Should return the same string" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty" executed="True" result="Success" success="True" time="0.0605" asserts="0" description="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty">
                <results>
                  <test-case description="Should not throw" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty.Should not throw" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return the same string" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty.Should return the same string" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return warning about unused placeholder value" name="-Path -Values -AllowEmptyPlaceholders.contains no placeholders and value is not empty.Should return warning about unused placeholder value" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it" executed="True" result="Success" success="True" time="0.1012" asserts="0" description="-Path -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it">
                <results>
                  <test-case description="Should not throw" name="-Path -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it.Should not throw" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-Path -Values -AllowEmptyPlaceholders.contains 1 placeholder and -Values contains value for it.Should return modified string" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="-Path -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them" executed="True" result="Success" success="True" time="0.1729" asserts="0" description="-Path -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them">
                <results>
                  <test-case description="Should not throw" name="-Path -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them.Should not throw" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return modified string" name="-Path -Values -AllowEmptyPlaceholders.contains 2 placeholder and -Values contains value for one of them.Should return modified string" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>